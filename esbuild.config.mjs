/* eslint-disable no-mixed-spaces-and-tabs */
import { copyFileSync, writeFileSync } from "fs";
import { join } from "path";
import process from "process";

import builtins from "builtin-modules";
import { config } from "dotenv";
import esbuild from "esbuild";
import copyStaticFiles from "esbuild-copy-static-files";
import envFilePlugin from "esbuild-envfile-plugin";
import eslint from "esbuild-plugin-eslint";
import esbuildSvelte from "esbuild-svelte";
import sveltePreprocess from "svelte-preprocess";

config();

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";
let dir = prod ? "./" : process.env.OUTDIR;
dir = "./";
const outfile = join(dir, "main.js");
const outstyles = join(dir, "styles.css");

if (!prod) {
  copyFileSync("./manifest.json", join(dir, "manifest.json"));
  writeFileSync(
    join(dir, ".hotreload"),
    "This file is used to enable hot reloading using the Hot Reload plugin. See https://github.com/pjeby/hot-reload for more information.",
  );
}

esbuild
  .build({
    banner: {
      js: banner,
    },
    bundle: true,
    entryPoints: ["main.ts"],
    external: [
      "obsidian",
      "electron",
      "env",
      "@codemirror/autocomplete",
      "@codemirror/closebrackets",
      "@codemirror/collab",
      "@codemirror/commands",
      "@codemirror/comment",
      "@codemirror/fold",
      "@codemirror/gutter",
      "@codemirror/highlight",
      "@codemirror/history",
      "@codemirror/language",
      "@codemirror/lint",
      "@codemirror/matchbrackets",
      "@codemirror/panel",
      "@codemirror/rangeset",
      "@codemirror/rectangular-selection",
      "@codemirror/search",
      "@codemirror/state",
      "@codemirror/stream-parser",
      "@codemirror/text",
      "@codemirror/tooltip",
      "@codemirror/view",
      ...builtins,
    ],
    format: "cjs",
    logLevel: "info",
    outfile: outfile,
    plugins: [
      envFilePlugin,
      esbuildSvelte({
        compilerOptions: { css: true },
        preprocess: sveltePreprocess(),
      }),
      eslint(),
      ...(!prod
        ? [
            copyStaticFiles({
              dereference: true,
              dest: outstyles,
              errorOnExist: false,
              src: "./styles.css",
            }),
          ]
        : []),
    ],
    sourcemap: prod ? false : "inline",
    target: "es2018",
    treeShaking: true,
    watch: !prod,
  })
  .catch(() => process.exit(1));
